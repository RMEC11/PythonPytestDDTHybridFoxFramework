{"name": "test_login_with_valid_email_and_invalid_password", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: MicrosoftEdge=140.0.3485.94)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6a7ba3ec5+18309]\n\t(No symbol) [0x0x7ff6a7b11570]\n\tGetHandleVerifier [0x0x7ff6a7d98efc+2070460]\n\t(No symbol) [0x0x7ff6a79014bd]\n\t(No symbol) [0x0x7ff6a78ffd88]\n\t(No symbol) [0x0x7ff6a790050b]\n\t(No symbol) [0x0x7ff6a7924f22]\n\t(No symbol) [0x0x7ff6a7919c6a]\n\t(No symbol) [0x0x7ff6a7919b45]\n\t(No symbol) [0x0x7ff6a78f39ba]\n\t(No symbol) [0x0x7ff6a78f2391]\n\t(No symbol) [0x0x7ff6a79b3239]\n\t(No symbol) [0x0x7ff6a797fc7a]\n\t(No symbol) [0x0x7ff6a795443b]\n\t(No symbol) [0x0x7ff6a799d082]\n\t(No symbol) [0x0x7ff6a797f943]\n\t(No symbol) [0x0x7ff6a79538e6]\n\t(No symbol) [0x0x7ff6a7952b52]\n\t(No symbol) [0x0x7ff6a7953723]\n\t(No symbol) [0x0x7ff6a7a42f75]\n\t(No symbol) [0x0x7ff6a7a4e74d]\n\tGetHandleVerifier [0x0x7ff6a7c395b3+630387]\n\tGetHandleVerifier [0x0x7ff6a7c41151+662033]\n\t(No symbol) [0x0x7ff6a7b1d659]\n\t(No symbol) [0x0x7ff6a7b16ff4]\n\t(No symbol) [0x0x7ff6a7b17143]\n\t(No symbol) [0x0x7ff6a7b0afc6]\n\tBaseThreadInitThunk [0x0x7ffa7284e8d7+23]\n\tRtlUserThreadStart [0x0x7ffa739c8d9c+44]", "trace": "request = <SubRequest 'setup_and_teardown' for <Function test_login_with_valid_email_and_invalid_password>>\n\n    @pytest.fixture()\n    def setup_and_teardown(request):\n        global driver\n        browser_name = ReadConfiguration.read_configuration(\"basic info\", \"browser\")\n        if browser_name.__eq__(\"chrome\"):\n            driver = webdriver.Chrome()\n        elif browser_name == \"edge\":\n            driver = webdriver.Edge()\n        elif browser_name.__eq__(\"firefox\"):\n            driver = webdriver.Firefox()\n        else:\n            print(\"Browser Name not found in Basic Info list\")\n    \n>       driver.maximize_window()\n\ntests\\conftest.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:650: in maximize_window\n    self.execute(command, None)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F595EB7100>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: JavaScript code failed\\\\nfrom un...[0x0x7ff6a7b0afc6]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffa7284e8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffa739c8d9c+44]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nE       from unknown command: 'Runtime.evaluate' wasn't found\nE         (Session info: MicrosoftEdge=140.0.3485.94)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6a7ba3ec5+18309]\nE       \t(No symbol) [0x0x7ff6a7b11570]\nE       \tGetHandleVerifier [0x0x7ff6a7d98efc+2070460]\nE       \t(No symbol) [0x0x7ff6a79014bd]\nE       \t(No symbol) [0x0x7ff6a78ffd88]\nE       \t(No symbol) [0x0x7ff6a790050b]\nE       \t(No symbol) [0x0x7ff6a7924f22]\nE       \t(No symbol) [0x0x7ff6a7919c6a]\nE       \t(No symbol) [0x0x7ff6a7919b45]\nE       \t(No symbol) [0x0x7ff6a78f39ba]\nE       \t(No symbol) [0x0x7ff6a78f2391]\nE       \t(No symbol) [0x0x7ff6a79b3239]\nE       \t(No symbol) [0x0x7ff6a797fc7a]\nE       \t(No symbol) [0x0x7ff6a795443b]\nE       \t(No symbol) [0x0x7ff6a799d082]\nE       \t(No symbol) [0x0x7ff6a797f943]\nE       \t(No symbol) [0x0x7ff6a79538e6]\nE       \t(No symbol) [0x0x7ff6a7952b52]\nE       \t(No symbol) [0x0x7ff6a7953723]\nE       \t(No symbol) [0x0x7ff6a7a42f75]\nE       \t(No symbol) [0x0x7ff6a7a4e74d]\nE       \tGetHandleVerifier [0x0x7ff6a7c395b3+630387]\nE       \tGetHandleVerifier [0x0x7ff6a7c41151+662033]\nE       \t(No symbol) [0x0x7ff6a7b1d659]\nE       \t(No symbol) [0x0x7ff6a7b16ff4]\nE       \t(No symbol) [0x0x7ff6a7b17143]\nE       \t(No symbol) [0x0x7ff6a7b0afc6]\nE       \tBaseThreadInitThunk [0x0x7ffa7284e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffa739c8d9c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "start": 1759059992659, "stop": 1759059992659, "uuid": "8aabb36b-e409-4bdf-a386-99e44dfbbd83", "historyId": "a87129e8bc488f2c2b04474f72c047f1", "testCaseId": "a87129e8bc488f2c2b04474f72c047f1", "fullName": "tests.test_login.TestLogin#test_login_with_valid_email_and_invalid_password", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-PQJ2IUR"}, {"name": "thread", "value": "29048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py", "TestLogin"]}